# This file is vendored from:
# https://github.com/aspect-build/workflows-action/blob/9f6fa497031f023c5c5017c233d0411604576d7f/.github/workflows/aspect-workflows.yaml
name: Aspect Workflows Template

on:
  # Makes this workflow reusable, see
  # https://github.blog/2022-02-10-using-reusable-workflows-github-actions
  workflow_call:
    inputs:
      aspect-config:
        description: path to the Aspect Workflows config.yaml file
        type: string
        default: .aspect/workflows/config.yaml
      delivery-workflow:
        description: the name of the file which contains the delivery workflow
        type: string
        default: delivery.yaml
      queue:
        description: the queue / runner pool that the setup step will run on
        type: string
        default: default
      slack_webhook_url:
        description: 'if set, then a webhook notification will be sent for failing builds on a release branch. Input should match the name of a secret. "secrets: inherit" must also be set'
        type: string
      inherited_secrets:
        description: 'comma separated list of secrets or regex (Oniguruma) describing secrets to be made available during the build. "secrets: inherit" must also be set. The regex is used by jq internally which uses the Oniguruma regular expression library: https://jqlang.github.io/jq/manual/'
        type: string

jobs:
  setup:
    runs-on: [self-hosted, aspect-workflows, "aspect-${{ inputs.queue }}"]
    steps:
      - uses: actions/checkout@v3
      - id: rosetta-generate
        run: |
          echo "json=$( \
            rosetta steps \
            --config ${{ inputs.aspect-config }} \
            --workspace . \
            --gha_task generate \
            --gha_json_pretty_print=false \
          )" | tee ${GITHUB_OUTPUT}

    outputs:
      cfg: ${{ steps.rosetta-generate.outputs.json }}

  bazel:
    needs: [setup]
    runs-on: ${{ fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].labels }}
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.cfg).matrix_config }}
    env:
      ASPECT_WORKFLOWS_CONFIG: ${{ inputs.aspect-config }}

    steps:
      - name: Configure environment
        run: configure_workflows_env

      - uses: actions/checkout@v3

      - name: Agent health checks
        run: agent_health_check

      - name: Process Secrets
        id: process_secrets
        if: inputs.inherited_secrets != ''
        run: |
          REQUIRED_SECRETS=$(jq -R --compact-output 'gsub("\\s+";"";"g") | split(",")' <<< "${{ inputs.inherited_secrets }}")
          FILTERED_SECRETS=$(jq --compact-output --argjson secrets "${REQUIRED_SECRETS}" 'with_entries( select (.key | test($secrets[]) ) )' <<< '''${{ toJson(secrets) }}''' )
          echo "filtered_secrets=${FILTERED_SECRETS}" | tee ${GITHUB_OUTPUT}

      - name: Branch Freshness
        uses: aspect-build/workflows-action@5.6.0
        with:
          workspace: ${{ fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].workspace }}
          task: branch_freshness

      - name: ${{ fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].task }}
        uses: aspect-build/workflows-action@5.6.0
        env: ${{ inputs.inherited_secrets != '' && fromJson(steps.process_secrets.outputs.filtered_secrets) || fromJson('{}') }}
        with:
            workspace: ${{ fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].workspace }}
            task: ${{ fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].task }}

      - name: Send notification to Slack workflow
        id: slack
        # oncall cares about branches that do delivery, so key this on whether we produce a delivery manifest
        if: inputs.slack_webhook_url != '' && failure() && fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].generate_manifest
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "gha_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets[inputs.slack_webhook_url] }}

      - name: Delivery Manifest
        if: fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].generate_manifest
        uses: aspect-build/workflows-action@5.6.0
        with:
            workspace: ${{ fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].workspace }}
            task: delivery_manifest
            has_artifact_output: true

      - name: Trigger Delivery
        # This uses the following API: https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#create-a-workflow-dispatch-event
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ inputs.delivery-workflow }}/dispatches \
            -d "{\"ref\":\"${{ fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].branch }}\",\"inputs\":{\"delivery_commit\":\"${GITHUB_SHA}\"}}"
        shell: bash
        if: fromJson(needs.setup.outputs.cfg).workflows_config[matrix.job].delivery
